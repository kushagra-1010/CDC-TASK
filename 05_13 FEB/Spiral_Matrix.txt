class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row = matrix.size();
        if (row == 0) return {}; 
        int col = matrix[0].size();

        int count = 0;
        int total = row * col;

        int Srow = 0;
        int Scol = 0;
        int Lrow = row - 1;
        int Lcol = col - 1;

        vector<int> ans;

        while (count < total) {
            
            for (int i = Scol; i <= Lcol && count < total; i++) {
                ans.push_back(matrix[Srow][i]);
                count++;
            }
            Srow++;

           
            for (int i = Srow; i <= Lrow && count < total; i++) {
                ans.push_back(matrix[i][Lcol]);
                count++;
            }
            Lcol--;

           
            for (int i = Lcol; i >= Scol && count < total; i--) {
                ans.push_back(matrix[Lrow][i]);
                count++;
            }
            Lrow--;

           
            for (int i = Lrow; i >= Srow && count < total; i--) {
                ans.push_back(matrix[i][Scol]);
                count++;
            }
            Scol++;
        }
        return ans;
    }
};
